generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model company_buildings {
  id    Int     @id @default(autoincrement())
  name  String  @db.VarChar(300)
  teams teams[]
}

model employees {
  id                 Int                  @id @default(autoincrement())
  first_name         String               @db.VarChar(300)
  last_name          String               @db.VarChar(300)
  birthdate          DateTime             @db.Date
  email              String               @unique @db.VarChar(200)
  team_id            Int?
  teams              teams?               @relation(fields: [team_id], references: [id], onUpdate: NoAction)
  intranet_accounts  intranet_accounts[]
  projects_employees projects_employees[]
}

model intranet_accounts {
  id        Int       @id @default(autoincrement())
  email     String    @db.VarChar(200)
  password  String    @db.VarChar(200)
  employees employees @relation(fields: [email], references: [email], onDelete: Cascade, onUpdate: NoAction)
}

model projects {
  id                 Int                  @id @default(autoincrement())
  title              String               @db.VarChar(300)
  deadline           DateTime?            @db.Date
  projects_employees projects_employees[]
}

model projects_employees {
  employee_id Int
  project_id  Int
  employees   employees @relation(fields: [employee_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  projects    projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([employee_id, project_id])
}

model teams {
  id                Int                @id @default(autoincrement())
  name              String             @db.VarChar(300)
  building_id       Int?
  employees         employees[]
  company_buildings company_buildings? @relation(fields: [building_id], references: [id], onUpdate: NoAction)
}
